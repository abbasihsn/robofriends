{"version":3,"sources":["reportWebVitals.js","components/cardList.js","components/searchBox.js","components/scroll.js","components/errorBoundaries.js","containers/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundaries","state","hasErrors","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCWCQ,EAbE,SAAC,GAAW,EAAVC,OAEX,MAAM,IAAIC,MAAM,UCUTC,EAdG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIC,KAAK,SACLC,YAAY,gBACZF,UAAU,mCACVG,SAAUJ,OCAXK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCkBJC,G,wDApBX,WAAaN,GAAO,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,WAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAACF,WAAW,M,oBAG9B,WACI,OAAGC,KAAKF,MAAMC,UACH,uEAEAC,KAAKT,MAAMK,a,GAhBAM,cCqDfC,E,kDA7CX,aAAc,IAAD,8BACT,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVK,YAAaD,EAAME,OAAOC,SAjB9B,EAAKV,MAAQ,CACThB,OAAO,GACPwB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OAEfG,MAAM,8CAA8ClC,MAAK,SAAAmC,GACrD,OAAOA,EAASC,UACjBpC,MAAK,SAAAqC,GACJ,EAAKX,SAAS,CAACnB,OAAO8B,S,oBAU9B,WACI,MAA8BZ,KAAKF,MAA5BhB,EAAP,EAAOA,OAAQwB,EAAf,EAAeA,YACTO,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQnC,EAAOqC,OAGP,sBAAKjC,UAAY,KAAjB,UACI,oBAAIA,UAAU,QAAd,0BACA,cAAC,EAAD,CAAWD,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQ+B,WAPlC,oBAAI3B,UAAU,KAAd,yB,GA/BMkC,IAAMlB,W,MCDxBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.e27df538.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Card from './card'\n\n\n\nconst CardList = ({robots})=>{\n    if(true){\n        throw new Error('NoOo!');\n    }\n    const cardComponents = robots.map(user=>{\n        return <Card key={user.id} id={user.id} title={user.name} email={user.email}/>});\n    return (\n        <div>\n            {cardComponents}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchChange})=>{\n    return (\n        <div className=\"pa2\">\n            <input \n                type=\"search\" \n                placeholder=\"search robots\"\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                onChange={searchChange}\n            >\n            </input>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props)=>{\n    return (\n        <div style={{overflowY: 'scroll', border:'1px solid black', height:'500px'}}>\n            {props.children}\n        </div> \n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundaries extends Component{\n    constructor (props){\n        super(props);\n        this.state = {\n            hasErrors:false\n        }\n    }\n\n    componentDidCatch(){\n        this.setState({hasErrors: true});\n    }\n\n    render(){\n        if(this.state.hasErrors){\n            return <h1>OoOopppss!!! That does not look good!</h1>\n        } else {\n            return this.props.children;\n        }\n    }\n}\n\nexport default ErrorBoundaries;","import React from 'react';\nimport CardList from '../components/cardList.js';\nimport SearchBox from '../components/searchBox';\nimport Scroll from '../components/scroll'\nimport './app.css'\nimport ErrorBoundaries from '../components/errorBoundaries.js';\n\n\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            robots:[],\n            searchField:''\n        }\n    }\n\n    componentDidMount(){\n        // runs after render method!\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\n            return response.json();\n        }).then(users=>{\n            this.setState({robots:users});\n        });\n    }\n\n    onSearchChange = (event)=>{\n        this.setState({\n            searchField: event.target.value\n        });\n    }\n\n    render(){\n        const {robots, searchField} = this.state;\n        const filteredRobots = robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        // console.log(filteredRobots);\n        return !robots.length?\n            <h1 className='tc'>Loading</h1>:\n            (\n                <div className = 'tc'> \n                    <h1 className='tc f1'>Robo Friends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundaries>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundaries>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/app'\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}